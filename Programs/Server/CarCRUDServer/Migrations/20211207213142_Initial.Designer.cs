// <auto-generated />
using System;
using CarCRUD.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarCRUD.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20211207213142_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarCRUD.DataModels.CarBrand", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CarBrands");
                });

            modelBuilder.Entity("CarCRUD.DataModels.CarFavourite", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("carTypeID")
                        .HasColumnType("int");

                    b.Property<string>("color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fuel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userDataID")
                        .HasColumnType("int");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("carTypeID");

                    b.HasIndex("userDataID");

                    b.ToTable("FavouriteCars");
                });

            modelBuilder.Entity("CarCRUD.DataModels.CarImage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("favouriteCarID")
                        .HasColumnType("int");

                    b.Property<byte[]>("image")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("ID");

                    b.HasIndex("favouriteCarID");

                    b.ToTable("CarImages");
                });

            modelBuilder.Entity("CarCRUD.DataModels.CarType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("brandID")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("brandID");

                    b.ToTable("CarType");
                });

            modelBuilder.Entity("CarCRUD.DataModels.UserBrandRequest", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("userID");

                    b.ToTable("UserRequests");
                });

            modelBuilder.Entity("CarCRUD.DataModels.UserData", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("accountDeleteRequested")
                        .HasColumnType("bit");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("passwordAttempts")
                        .HasColumnType("int");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CarCRUD.DataModels.CarFavourite", b =>
                {
                    b.HasOne("CarCRUD.DataModels.CarType", "carType")
                        .WithMany()
                        .HasForeignKey("carTypeID");

                    b.HasOne("CarCRUD.DataModels.UserData", "userData")
                        .WithMany()
                        .HasForeignKey("userDataID");

                    b.Navigation("carType");

                    b.Navigation("userData");
                });

            modelBuilder.Entity("CarCRUD.DataModels.CarImage", b =>
                {
                    b.HasOne("CarCRUD.DataModels.CarFavourite", "favouriteCar")
                        .WithMany()
                        .HasForeignKey("favouriteCarID");

                    b.Navigation("favouriteCar");
                });

            modelBuilder.Entity("CarCRUD.DataModels.CarType", b =>
                {
                    b.HasOne("CarCRUD.DataModels.CarBrand", "brand")
                        .WithMany()
                        .HasForeignKey("brandID");

                    b.Navigation("brand");
                });

            modelBuilder.Entity("CarCRUD.DataModels.UserBrandRequest", b =>
                {
                    b.HasOne("CarCRUD.DataModels.UserData", "user")
                        .WithMany()
                        .HasForeignKey("userID");

                    b.Navigation("user");
                });
#pragma warning restore 612, 618
        }
    }
}
